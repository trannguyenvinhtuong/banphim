#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DOAN.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_BANPHIM")]
	public partial class ClassesKBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertABOUT(ABOUT instance);
    partial void UpdateABOUT(ABOUT instance);
    partial void DeleteABOUT(ABOUT instance);
    partial void InsertXUATXU(XUATXU instance);
    partial void UpdateXUATXU(XUATXU instance);
    partial void DeleteXUATXU(XUATXU instance);
    partial void InsertANHSP(ANHSP instance);
    partial void UpdateANHSP(ANHSP instance);
    partial void DeleteANHSP(ANHSP instance);
    partial void InsertCHITIETDONHANG(CHITIETDONHANG instance);
    partial void UpdateCHITIETDONHANG(CHITIETDONHANG instance);
    partial void DeleteCHITIETDONHANG(CHITIETDONHANG instance);
    partial void InsertDONDATHANG(DONDATHANG instance);
    partial void UpdateDONDATHANG(DONDATHANG instance);
    partial void DeleteDONDATHANG(DONDATHANG instance);
    partial void InsertHANG(HANG instance);
    partial void UpdateHANG(HANG instance);
    partial void DeleteHANG(HANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertMOTA(MOTA instance);
    partial void UpdateMOTA(MOTA instance);
    partial void DeleteMOTA(MOTA instance);
    partial void InsertNHAPP(NHAPP instance);
    partial void UpdateNHAPP(NHAPP instance);
    partial void DeleteNHAPP(NHAPP instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTHELOAI(THELOAI instance);
    partial void UpdateTHELOAI(THELOAI instance);
    partial void DeleteTHELOAI(THELOAI instance);
    #endregion
		
		public ClassesKBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_BANPHIMConnectionString3"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesKBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesKBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesKBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesKBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ABOUT> ABOUTs
		{
			get
			{
				return this.GetTable<ABOUT>();
			}
		}
		
		public System.Data.Linq.Table<XUATXU> XUATXUs
		{
			get
			{
				return this.GetTable<XUATXU>();
			}
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<ANHSP> ANHSPs
		{
			get
			{
				return this.GetTable<ANHSP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this.GetTable<DONDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<HANG> HANGs
		{
			get
			{
				return this.GetTable<HANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<MOTA> MOTAs
		{
			get
			{
				return this.GetTable<MOTA>();
			}
		}
		
		public System.Data.Linq.Table<NHAPP> NHAPPs
		{
			get
			{
				return this.GetTable<NHAPP>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<THELOAI> THELOAIs
		{
			get
			{
				return this.GetTable<THELOAI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABOUT")]
	public partial class ABOUT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAST;
		
		private string _TENCT;
		
		private System.Nullable<int> _TONGDAI;
		
		private string _DIACHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASTChanging(string value);
    partial void OnMASTChanged();
    partial void OnTENCTChanging(string value);
    partial void OnTENCTChanged();
    partial void OnTONGDAIChanging(System.Nullable<int> value);
    partial void OnTONGDAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public ABOUT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAST", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAST
		{
			get
			{
				return this._MAST;
			}
			set
			{
				if ((this._MAST != value))
				{
					this.OnMASTChanging(value);
					this.SendPropertyChanging();
					this._MAST = value;
					this.SendPropertyChanged("MAST");
					this.OnMASTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCT", DbType="NVarChar(50)")]
		public string TENCT
		{
			get
			{
				return this._TENCT;
			}
			set
			{
				if ((this._TENCT != value))
				{
					this.OnTENCTChanging(value);
					this.SendPropertyChanging();
					this._TENCT = value;
					this.SendPropertyChanged("TENCT");
					this.OnTENCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGDAI", DbType="Int")]
		public System.Nullable<int> TONGDAI
		{
			get
			{
				return this._TONGDAI;
			}
			set
			{
				if ((this._TONGDAI != value))
				{
					this.OnTONGDAIChanging(value);
					this.SendPropertyChanging();
					this._TONGDAI = value;
					this.SendPropertyChanged("TONGDAI");
					this.OnTONGDAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XUATXU")]
	public partial class XUATXU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANC;
		
		private string _TENNC;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCChanging(string value);
    partial void OnMANCChanged();
    partial void OnTENNCChanging(string value);
    partial void OnTENNCChanged();
    #endregion
		
		public XUATXU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANC
		{
			get
			{
				return this._MANC;
			}
			set
			{
				if ((this._MANC != value))
				{
					this.OnMANCChanging(value);
					this.SendPropertyChanging();
					this._MANC = value;
					this.SendPropertyChanged("MANC");
					this.OnMANCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNC", DbType="NVarChar(50)")]
		public string TENNC
		{
			get
			{
				return this._TENNC;
			}
			set
			{
				if ((this._TENNC != value))
				{
					this.OnTENNCChanging(value);
					this.SendPropertyChanging();
					this._TENNC = value;
					this.SendPropertyChanged("TENNC");
					this.OnTENNCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XUATXU_SANPHAM", Storage="_SANPHAMs", ThisKey="MANC", OtherKey="MANC")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.XUATXU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.XUATXU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN
	{
		
		private string _username;
		
		private string _password;
		
		public ADMIN()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANHSP")]
	public partial class ANHSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _IMG1;
		
		private string _IMG2;
		
		private string _IMG3;
		
		private string _IMG4;
		
		private string _ANHSLIDE1;
		
		private string _ANHSLIDE2;
		
		private string _ANHSLIDE3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnIMG1Changing(string value);
    partial void OnIMG1Changed();
    partial void OnIMG2Changing(string value);
    partial void OnIMG2Changed();
    partial void OnIMG3Changing(string value);
    partial void OnIMG3Changed();
    partial void OnIMG4Changing(string value);
    partial void OnIMG4Changed();
    partial void OnANHSLIDE1Changing(string value);
    partial void OnANHSLIDE1Changed();
    partial void OnANHSLIDE2Changing(string value);
    partial void OnANHSLIDE2Changed();
    partial void OnANHSLIDE3Changing(string value);
    partial void OnANHSLIDE3Changed();
    #endregion
		
		public ANHSP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG1", DbType="NVarChar(MAX)")]
		public string IMG1
		{
			get
			{
				return this._IMG1;
			}
			set
			{
				if ((this._IMG1 != value))
				{
					this.OnIMG1Changing(value);
					this.SendPropertyChanging();
					this._IMG1 = value;
					this.SendPropertyChanged("IMG1");
					this.OnIMG1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG2", DbType="NVarChar(MAX)")]
		public string IMG2
		{
			get
			{
				return this._IMG2;
			}
			set
			{
				if ((this._IMG2 != value))
				{
					this.OnIMG2Changing(value);
					this.SendPropertyChanging();
					this._IMG2 = value;
					this.SendPropertyChanged("IMG2");
					this.OnIMG2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG3", DbType="NVarChar(MAX)")]
		public string IMG3
		{
			get
			{
				return this._IMG3;
			}
			set
			{
				if ((this._IMG3 != value))
				{
					this.OnIMG3Changing(value);
					this.SendPropertyChanging();
					this._IMG3 = value;
					this.SendPropertyChanged("IMG3");
					this.OnIMG3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG4", DbType="NVarChar(MAX)")]
		public string IMG4
		{
			get
			{
				return this._IMG4;
			}
			set
			{
				if ((this._IMG4 != value))
				{
					this.OnIMG4Changing(value);
					this.SendPropertyChanging();
					this._IMG4 = value;
					this.SendPropertyChanged("IMG4");
					this.OnIMG4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHSLIDE1", DbType="NVarChar(MAX)")]
		public string ANHSLIDE1
		{
			get
			{
				return this._ANHSLIDE1;
			}
			set
			{
				if ((this._ANHSLIDE1 != value))
				{
					this.OnANHSLIDE1Changing(value);
					this.SendPropertyChanging();
					this._ANHSLIDE1 = value;
					this.SendPropertyChanged("ANHSLIDE1");
					this.OnANHSLIDE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHSLIDE2", DbType="NVarChar(MAX)")]
		public string ANHSLIDE2
		{
			get
			{
				return this._ANHSLIDE2;
			}
			set
			{
				if ((this._ANHSLIDE2 != value))
				{
					this.OnANHSLIDE2Changing(value);
					this.SendPropertyChanging();
					this._ANHSLIDE2 = value;
					this.SendPropertyChanged("ANHSLIDE2");
					this.OnANHSLIDE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHSLIDE3", DbType="NVarChar(MAX)")]
		public string ANHSLIDE3
		{
			get
			{
				return this._ANHSLIDE3;
			}
			set
			{
				if ((this._ANHSLIDE3 != value))
				{
					this.OnANHSLIDE3Changing(value);
					this.SendPropertyChanging();
					this._ANHSLIDE3 = value;
					this.SendPropertyChanged("ANHSLIDE3");
					this.OnANHSLIDE3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONHANG")]
	public partial class CHITIETDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private string _MASP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<decimal> _THANHTIEN;
		
		private EntityRef<DONDATHANG> _DONDATHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTHANHTIENChanging(System.Nullable<decimal> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIETDONHANG()
		{
			this._DONDATHANG = default(EntityRef<DONDATHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(10)")]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETDONHANG_DONDATHANG", Storage="_DONDATHANG", ThisKey="MADH", OtherKey="MADH", IsUnique=true, IsForeignKey=false)]
		public DONDATHANG DONDATHANG
		{
			get
			{
				return this._DONDATHANG.Entity;
			}
			set
			{
				DONDATHANG previousValue = this._DONDATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONDATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONDATHANG.Entity = null;
						previousValue.CHITIETDONHANG = null;
					}
					this._DONDATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANG = this;
					}
					this.SendPropertyChanged("DONDATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDATHANG")]
	public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private System.Nullable<bool> _TINHTRANHTT;
		
		private System.Nullable<bool> _TINHTRANGGH;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private System.Nullable<int> _MAKH;
		
		private EntityRef<CHITIETDONHANG> _CHITIETDONHANG;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnTINHTRANHTTChanging(System.Nullable<bool> value);
    partial void OnTINHTRANHTTChanged();
    partial void OnTINHTRANGGHChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGGHChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    #endregion
		
		public DONDATHANG()
		{
			this._CHITIETDONHANG = default(EntityRef<CHITIETDONHANG>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					if (this._CHITIETDONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANHTT", DbType="Bit")]
		public System.Nullable<bool> TINHTRANHTT
		{
			get
			{
				return this._TINHTRANHTT;
			}
			set
			{
				if ((this._TINHTRANHTT != value))
				{
					this.OnTINHTRANHTTChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANHTT = value;
					this.SendPropertyChanged("TINHTRANHTT");
					this.OnTINHTRANHTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANGGH", DbType="Bit")]
		public System.Nullable<bool> TINHTRANGGH
		{
			get
			{
				return this._TINHTRANGGH;
			}
			set
			{
				if ((this._TINHTRANGGH != value))
				{
					this.OnTINHTRANGGHChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANGGH = value;
					this.SendPropertyChanged("TINHTRANGGH");
					this.OnTINHTRANGGHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETDONHANG_DONDATHANG", Storage="_CHITIETDONHANG", ThisKey="MADH", OtherKey="MADH", IsForeignKey=true)]
		public CHITIETDONHANG CHITIETDONHANG
		{
			get
			{
				return this._CHITIETDONHANG.Entity;
			}
			set
			{
				CHITIETDONHANG previousValue = this._CHITIETDONHANG.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETDONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETDONHANG.Entity = null;
						previousValue.DONDATHANG = null;
					}
					this._CHITIETDONHANG.Entity = value;
					if ((value != null))
					{
						value.DONDATHANG = this;
						this._MADH = value.MADH;
					}
					else
					{
						this._MADH = default(int);
					}
					this.SendPropertyChanged("CHITIETDONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONDATHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONDATHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANG")]
	public partial class HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHA;
		
		private string _TENHA;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHAChanging(string value);
    partial void OnMAHAChanged();
    partial void OnTENHAChanging(string value);
    partial void OnTENHAChanged();
    #endregion
		
		public HANG()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHA", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHA
		{
			get
			{
				return this._MAHA;
			}
			set
			{
				if ((this._MAHA != value))
				{
					this.OnMAHAChanging(value);
					this.SendPropertyChanging();
					this._MAHA = value;
					this.SendPropertyChanged("MAHA");
					this.OnMAHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHA", DbType="NVarChar(50)")]
		public string TENHA
		{
			get
			{
				return this._TENHA;
			}
			set
			{
				if ((this._TENHA != value))
				{
					this.OnTENHAChanging(value);
					this.SendPropertyChanging();
					this._TENHA = value;
					this.SendPropertyChanged("TENHA");
					this.OnTENHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_SANPHAMs", ThisKey="MAHA", OtherKey="MAHA")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _TENKH;
		
		private System.Nullable<System.DateTime> _NAMSINH;
		
		private string _DIACHI;
		
		private System.Nullable<int> _SDT;
		
		private string _TK;
		
		private string _MK;
		
		private EntitySet<DONDATHANG> _DONDATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnNAMSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNAMSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnTKChanging(string value);
    partial void OnTKChanged();
    partial void OnMKChanging(string value);
    partial void OnMKChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(50)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NAMSINH
		{
			get
			{
				return this._NAMSINH;
			}
			set
			{
				if ((this._NAMSINH != value))
				{
					this.OnNAMSINHChanging(value);
					this.SendPropertyChanging();
					this._NAMSINH = value;
					this.SendPropertyChanged("NAMSINH");
					this.OnNAMSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TK", DbType="NVarChar(20)")]
		public string TK
		{
			get
			{
				return this._TK;
			}
			set
			{
				if ((this._TK != value))
				{
					this.OnTKChanging(value);
					this.SendPropertyChanging();
					this._TK = value;
					this.SendPropertyChanged("TK");
					this.OnTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK", DbType="NVarChar(20)")]
		public string MK
		{
			get
			{
				return this._MK;
			}
			set
			{
				if ((this._MK != value))
				{
					this.OnMKChanging(value);
					this.SendPropertyChanging();
					this._MK = value;
					this.SendPropertyChanged("MK");
					this.OnMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this._DONDATHANGs;
			}
			set
			{
				this._DONDATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOTA")]
	public partial class MOTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _MOTA1;
		
		private string _MOTA2;
		
		private string _MOTA3;
		
		private string _MOTA4;
		
		private string _MOTA5;
		
		private string _MOTA6;
		
		private string _MOTA7;
		
		private string _MOTA8;
		
		private string _MOTA9;
		
		private string _MOTA10;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnMOTA1Changing(string value);
    partial void OnMOTA1Changed();
    partial void OnMOTA2Changing(string value);
    partial void OnMOTA2Changed();
    partial void OnMOTA3Changing(string value);
    partial void OnMOTA3Changed();
    partial void OnMOTA4Changing(string value);
    partial void OnMOTA4Changed();
    partial void OnMOTA5Changing(string value);
    partial void OnMOTA5Changed();
    partial void OnMOTA6Changing(string value);
    partial void OnMOTA6Changed();
    partial void OnMOTA7Changing(string value);
    partial void OnMOTA7Changed();
    partial void OnMOTA8Changing(string value);
    partial void OnMOTA8Changed();
    partial void OnMOTA9Changing(string value);
    partial void OnMOTA9Changed();
    partial void OnMOTA10Changing(string value);
    partial void OnMOTA10Changed();
    #endregion
		
		public MOTA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA1", DbType="NVarChar(MAX)")]
		public string MOTA1
		{
			get
			{
				return this._MOTA1;
			}
			set
			{
				if ((this._MOTA1 != value))
				{
					this.OnMOTA1Changing(value);
					this.SendPropertyChanging();
					this._MOTA1 = value;
					this.SendPropertyChanged("MOTA1");
					this.OnMOTA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA2", DbType="NVarChar(MAX)")]
		public string MOTA2
		{
			get
			{
				return this._MOTA2;
			}
			set
			{
				if ((this._MOTA2 != value))
				{
					this.OnMOTA2Changing(value);
					this.SendPropertyChanging();
					this._MOTA2 = value;
					this.SendPropertyChanged("MOTA2");
					this.OnMOTA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA3", DbType="NVarChar(MAX)")]
		public string MOTA3
		{
			get
			{
				return this._MOTA3;
			}
			set
			{
				if ((this._MOTA3 != value))
				{
					this.OnMOTA3Changing(value);
					this.SendPropertyChanging();
					this._MOTA3 = value;
					this.SendPropertyChanged("MOTA3");
					this.OnMOTA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA4", DbType="NVarChar(MAX)")]
		public string MOTA4
		{
			get
			{
				return this._MOTA4;
			}
			set
			{
				if ((this._MOTA4 != value))
				{
					this.OnMOTA4Changing(value);
					this.SendPropertyChanging();
					this._MOTA4 = value;
					this.SendPropertyChanged("MOTA4");
					this.OnMOTA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA5", DbType="NVarChar(MAX)")]
		public string MOTA5
		{
			get
			{
				return this._MOTA5;
			}
			set
			{
				if ((this._MOTA5 != value))
				{
					this.OnMOTA5Changing(value);
					this.SendPropertyChanging();
					this._MOTA5 = value;
					this.SendPropertyChanged("MOTA5");
					this.OnMOTA5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA6", DbType="NVarChar(MAX)")]
		public string MOTA6
		{
			get
			{
				return this._MOTA6;
			}
			set
			{
				if ((this._MOTA6 != value))
				{
					this.OnMOTA6Changing(value);
					this.SendPropertyChanging();
					this._MOTA6 = value;
					this.SendPropertyChanged("MOTA6");
					this.OnMOTA6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA7", DbType="NVarChar(MAX)")]
		public string MOTA7
		{
			get
			{
				return this._MOTA7;
			}
			set
			{
				if ((this._MOTA7 != value))
				{
					this.OnMOTA7Changing(value);
					this.SendPropertyChanging();
					this._MOTA7 = value;
					this.SendPropertyChanged("MOTA7");
					this.OnMOTA7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA8", DbType="NVarChar(MAX)")]
		public string MOTA8
		{
			get
			{
				return this._MOTA8;
			}
			set
			{
				if ((this._MOTA8 != value))
				{
					this.OnMOTA8Changing(value);
					this.SendPropertyChanging();
					this._MOTA8 = value;
					this.SendPropertyChanged("MOTA8");
					this.OnMOTA8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA9", DbType="NVarChar(MAX)")]
		public string MOTA9
		{
			get
			{
				return this._MOTA9;
			}
			set
			{
				if ((this._MOTA9 != value))
				{
					this.OnMOTA9Changing(value);
					this.SendPropertyChanging();
					this._MOTA9 = value;
					this.SendPropertyChanged("MOTA9");
					this.OnMOTA9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA10", DbType="NVarChar(MAX)")]
		public string MOTA10
		{
			get
			{
				return this._MOTA10;
			}
			set
			{
				if ((this._MOTA10 != value))
				{
					this.OnMOTA10Changing(value);
					this.SendPropertyChanging();
					this._MOTA10 = value;
					this.SendPropertyChanged("MOTA10");
					this.OnMOTA10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_MOTA", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.MOTA = null;
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.MOTA = this;
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAPP")]
	public partial class NHAPP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANPP;
		
		private string _TENNPP;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANPPChanging(string value);
    partial void OnMANPPChanged();
    partial void OnTENNPPChanging(string value);
    partial void OnTENNPPChanged();
    #endregion
		
		public NHAPP()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANPP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANPP
		{
			get
			{
				return this._MANPP;
			}
			set
			{
				if ((this._MANPP != value))
				{
					this.OnMANPPChanging(value);
					this.SendPropertyChanging();
					this._MANPP = value;
					this.SendPropertyChanged("MANPP");
					this.OnMANPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNPP", DbType="NVarChar(50)")]
		public string TENNPP
		{
			get
			{
				return this._TENNPP;
			}
			set
			{
				if ((this._TENNPP != value))
				{
					this.OnTENNPPChanging(value);
					this.SendPropertyChanging();
					this._TENNPP = value;
					this.SendPropertyChanged("TENNPP");
					this.OnTENNPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAPP_SANPHAM", Storage="_SANPHAMs", ThisKey="MANPP", OtherKey="MANPP")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHAPP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHAPP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private System.Nullable<int> _SOPHIM;
		
		private string _MATL;
		
		private System.Nullable<int> _NAMSX;
		
		private string _MAHA;
		
		private string _MANPP;
		
		private string _BAOHANH;
		
		private string _PHUKIEN;
		
		private string _MANC;
		
		private string _ANHBIA;
		
		private string _TENPHIM;
		
		private System.Nullable<System.DateTime> _NGAYCAPNHAT;
		
		private System.Nullable<int> _IDSP;
		
		private System.Nullable<decimal> _GIA;
		
		private string _SWITCH;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntityRef<MOTA> _MOTA;
		
		private EntityRef<HANG> _HANG;
		
		private EntityRef<NHAPP> _NHAPP;
		
		private EntityRef<XUATXU> _XUATXU;
		
		private EntityRef<THELOAI> _THELOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOPHIMChanging(System.Nullable<int> value);
    partial void OnSOPHIMChanged();
    partial void OnMATLChanging(string value);
    partial void OnMATLChanged();
    partial void OnNAMSXChanging(System.Nullable<int> value);
    partial void OnNAMSXChanged();
    partial void OnMAHAChanging(string value);
    partial void OnMAHAChanged();
    partial void OnMANPPChanging(string value);
    partial void OnMANPPChanged();
    partial void OnBAOHANHChanging(string value);
    partial void OnBAOHANHChanged();
    partial void OnPHUKIENChanging(string value);
    partial void OnPHUKIENChanged();
    partial void OnMANCChanging(string value);
    partial void OnMANCChanged();
    partial void OnANHBIAChanging(string value);
    partial void OnANHBIAChanged();
    partial void OnTENPHIMChanging(string value);
    partial void OnTENPHIMChanged();
    partial void OnNGAYCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYCAPNHATChanged();
    partial void OnIDSPChanging(System.Nullable<int> value);
    partial void OnIDSPChanged();
    partial void OnGIAChanging(System.Nullable<decimal> value);
    partial void OnGIAChanged();
    partial void OnSWITCHChanging(string value);
    partial void OnSWITCHChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._MOTA = default(EntityRef<MOTA>);
			this._HANG = default(EntityRef<HANG>);
			this._NHAPP = default(EntityRef<NHAPP>);
			this._XUATXU = default(EntityRef<XUATXU>);
			this._THELOAI = default(EntityRef<THELOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPHIM", DbType="Int")]
		public System.Nullable<int> SOPHIM
		{
			get
			{
				return this._SOPHIM;
			}
			set
			{
				if ((this._SOPHIM != value))
				{
					this.OnSOPHIMChanging(value);
					this.SendPropertyChanging();
					this._SOPHIM = value;
					this.SendPropertyChanged("SOPHIM");
					this.OnSOPHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATL", DbType="Char(10)")]
		public string MATL
		{
			get
			{
				return this._MATL;
			}
			set
			{
				if ((this._MATL != value))
				{
					if (this._THELOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATLChanging(value);
					this.SendPropertyChanging();
					this._MATL = value;
					this.SendPropertyChanged("MATL");
					this.OnMATLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSX", DbType="Int")]
		public System.Nullable<int> NAMSX
		{
			get
			{
				return this._NAMSX;
			}
			set
			{
				if ((this._NAMSX != value))
				{
					this.OnNAMSXChanging(value);
					this.SendPropertyChanging();
					this._NAMSX = value;
					this.SendPropertyChanged("NAMSX");
					this.OnNAMSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHA", DbType="Char(10)")]
		public string MAHA
		{
			get
			{
				return this._MAHA;
			}
			set
			{
				if ((this._MAHA != value))
				{
					if (this._HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHAChanging(value);
					this.SendPropertyChanging();
					this._MAHA = value;
					this.SendPropertyChanged("MAHA");
					this.OnMAHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANPP", DbType="Char(10)")]
		public string MANPP
		{
			get
			{
				return this._MANPP;
			}
			set
			{
				if ((this._MANPP != value))
				{
					if (this._NHAPP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANPPChanging(value);
					this.SendPropertyChanging();
					this._MANPP = value;
					this.SendPropertyChanged("MANPP");
					this.OnMANPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAOHANH", DbType="NVarChar(50)")]
		public string BAOHANH
		{
			get
			{
				return this._BAOHANH;
			}
			set
			{
				if ((this._BAOHANH != value))
				{
					this.OnBAOHANHChanging(value);
					this.SendPropertyChanging();
					this._BAOHANH = value;
					this.SendPropertyChanged("BAOHANH");
					this.OnBAOHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUKIEN", DbType="NVarChar(50)")]
		public string PHUKIEN
		{
			get
			{
				return this._PHUKIEN;
			}
			set
			{
				if ((this._PHUKIEN != value))
				{
					this.OnPHUKIENChanging(value);
					this.SendPropertyChanging();
					this._PHUKIEN = value;
					this.SendPropertyChanged("PHUKIEN");
					this.OnPHUKIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANC", DbType="Char(10)")]
		public string MANC
		{
			get
			{
				return this._MANC;
			}
			set
			{
				if ((this._MANC != value))
				{
					if (this._XUATXU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCChanging(value);
					this.SendPropertyChanging();
					this._MANC = value;
					this.SendPropertyChanged("MANC");
					this.OnMANCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHBIA", DbType="NVarChar(MAX)")]
		public string ANHBIA
		{
			get
			{
				return this._ANHBIA;
			}
			set
			{
				if ((this._ANHBIA != value))
				{
					this.OnANHBIAChanging(value);
					this.SendPropertyChanging();
					this._ANHBIA = value;
					this.SendPropertyChanged("ANHBIA");
					this.OnANHBIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHIM", DbType="NVarChar(50)")]
		public string TENPHIM
		{
			get
			{
				return this._TENPHIM;
			}
			set
			{
				if ((this._TENPHIM != value))
				{
					this.OnTENPHIMChanging(value);
					this.SendPropertyChanging();
					this._TENPHIM = value;
					this.SendPropertyChanged("TENPHIM");
					this.OnTENPHIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCAPNHAT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYCAPNHAT
		{
			get
			{
				return this._NGAYCAPNHAT;
			}
			set
			{
				if ((this._NGAYCAPNHAT != value))
				{
					this.OnNGAYCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYCAPNHAT = value;
					this.SendPropertyChanged("NGAYCAPNHAT");
					this.OnNGAYCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", DbType="Int")]
		public System.Nullable<int> IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWITCH", DbType="NVarChar(50)")]
		public string SWITCH
		{
			get
			{
				return this._SWITCH;
			}
			set
			{
				if ((this._SWITCH != value))
				{
					this.OnSWITCHChanging(value);
					this.SendPropertyChanging();
					this._SWITCH = value;
					this.SendPropertyChanged("SWITCH");
					this.OnSWITCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_MOTA", Storage="_MOTA", ThisKey="MASP", OtherKey="MASP", IsUnique=true, IsForeignKey=false)]
		public MOTA MOTA
		{
			get
			{
				return this._MOTA.Entity;
			}
			set
			{
				MOTA previousValue = this._MOTA.Entity;
				if (((previousValue != value) 
							|| (this._MOTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MOTA.Entity = null;
						previousValue.SANPHAM = null;
					}
					this._MOTA.Entity = value;
					if ((value != null))
					{
						value.SANPHAM = this;
					}
					this.SendPropertyChanged("MOTA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_HANG", ThisKey="MAHA", OtherKey="MAHA", IsForeignKey=true)]
		public HANG HANG
		{
			get
			{
				return this._HANG.Entity;
			}
			set
			{
				HANG previousValue = this._HANG.Entity;
				if (((previousValue != value) 
							|| (this._HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HANG.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAHA = value.MAHA;
					}
					else
					{
						this._MAHA = default(string);
					}
					this.SendPropertyChanged("HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAPP_SANPHAM", Storage="_NHAPP", ThisKey="MANPP", OtherKey="MANPP", IsForeignKey=true)]
		public NHAPP NHAPP
		{
			get
			{
				return this._NHAPP.Entity;
			}
			set
			{
				NHAPP previousValue = this._NHAPP.Entity;
				if (((previousValue != value) 
							|| (this._NHAPP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAPP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NHAPP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MANPP = value.MANPP;
					}
					else
					{
						this._MANPP = default(string);
					}
					this.SendPropertyChanged("NHAPP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XUATXU_SANPHAM", Storage="_XUATXU", ThisKey="MANC", OtherKey="MANC", IsForeignKey=true)]
		public XUATXU XUATXU
		{
			get
			{
				return this._XUATXU.Entity;
			}
			set
			{
				XUATXU previousValue = this._XUATXU.Entity;
				if (((previousValue != value) 
							|| (this._XUATXU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XUATXU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._XUATXU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MANC = value.MANC;
					}
					else
					{
						this._MANC = default(string);
					}
					this.SendPropertyChanged("XUATXU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_SANPHAM", Storage="_THELOAI", ThisKey="MATL", OtherKey="MATL", IsForeignKey=true)]
		public THELOAI THELOAI
		{
			get
			{
				return this._THELOAI.Entity;
			}
			set
			{
				THELOAI previousValue = this._THELOAI.Entity;
				if (((previousValue != value) 
							|| (this._THELOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THELOAI.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._THELOAI.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MATL = value.MATL;
					}
					else
					{
						this._MATL = default(string);
					}
					this.SendPropertyChanged("THELOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THELOAI")]
	public partial class THELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATL;
		
		private string _TENTL;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATLChanging(string value);
    partial void OnMATLChanged();
    partial void OnTENTLChanging(string value);
    partial void OnTENTLChanged();
    #endregion
		
		public THELOAI()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATL", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATL
		{
			get
			{
				return this._MATL;
			}
			set
			{
				if ((this._MATL != value))
				{
					this.OnMATLChanging(value);
					this.SendPropertyChanging();
					this._MATL = value;
					this.SendPropertyChanged("MATL");
					this.OnMATLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTL", DbType="NVarChar(50)")]
		public string TENTL
		{
			get
			{
				return this._TENTL;
			}
			set
			{
				if ((this._TENTL != value))
				{
					this.OnTENTLChanging(value);
					this.SendPropertyChanging();
					this._TENTL = value;
					this.SendPropertyChanged("TENTL");
					this.OnTENTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_SANPHAM", Storage="_SANPHAMs", ThisKey="MATL", OtherKey="MATL")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = null;
		}
	}
}
#pragma warning restore 1591
